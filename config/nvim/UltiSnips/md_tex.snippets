#### Math ####
global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def notMath():
	return vim.eval('vimtex#syntax#in_mathzone()') != '1'
endglobal
#### Math ####

###########################################################

#### Main ####
snippet $ "enter math mode" Ai
\$$1\$$0
endsnippet

priority 100
context "math()"
snippet ( "()" iA
\l($1\r)$0
endsnippet

priority 100
context "math()"
snippet sq "[]" i
\l[$1\r]$0
endsnippet

priority 200
context "math()"
snippet 2sq "[[]]" i
\l[\!\l[$1\r]\!\r]$0
endsnippet

context "math()"
snippet | "||" iA
\l|$1\r|$0
endsnippet

context "math()"
snippet su ".|" i
\l.$1\r|_$0
endsnippet

context "math()"
snippet br "{}" i
\l\\{$1\r\\}$0
endsnippet

context "math()"
snippet no "||||" i
\l\|$1\r\|$0
endsnippet

context "math()"
snippet an "<>" i
\l\langle$1\r\rangle$0
endsnippet

context "math()"
snippet fr "fraction" i
\frac{$1}{$2}$0
endsnippet

context "math()"
snippet rt "sqrt" i
\sqrt{$1}$0
endsnippet

context "math()"
snippet der "derivative" i
\frac{\d ${1:f}}{\d ${2:x}}$0
endsnippet

context "math()"
snippet par "partial derivative" i
\frac{\partial $1}{\partial $2}$0
endsnippet

context "math()"
snippet int "integral" i
\int_{$1}^{$2}$4\d ${3:x}$0
endsnippet

context "math()"
snippet lim "limit" i
\lim_{${1:n}\to${2:\infty}}$0
endsnippet

priority 100
context "math()"
snippet sum "sum" i
\sum_{${1:i}=${2:0}}^{${3:\infty}}$0
endsnippet

priority 100
context "math()"
snippet prod "product" i
\prod_{${1:i}=${2:0}}^{${3:\infty}}$0
endsnippet

priority 200
context "math()"
snippet asum "arbitrary sum" i
\sum_{${1:i}\in${2: I}}$0
endsnippet

priority 200
context "math()"
snippet aprod "arbitrary product" i
\prod_{${1:i}\in${2: I}}$0
endsnippet

context "math()"
snippet div "divides" i
$1\divides$2
endsnippet

context "math()"
snippet gl "general linear group" i
\gl_${1:n}\!\l(${2:\mb\{R\}}\r)$0
endsnippet

context "math()"
snippet cycl "cyclic group" i
\mb{Z}/${1:n}\mb{Z}$0
endsnippet

context "math()"
snippet 2in "take two elements in" i
${1:x}_1,$1_2\in${3:X}
endsnippet

context "math()"
snippet mod "congruence modulo n" i
${1:a}\equiv${2:b}\mod ${3:n}
endsnippet

context "math()"
snippet ubrace "underbrace" i
\underbrace{$1}_{\mathclap{$2}}$0
endsnippet

context "math()"
snippet obrace "overbrace" i
\overbrace{$1}_{\mathclap{$2}}$0
endsnippet

context "math()"
snippet gra "graph of a function" i
\Gamma_{\mathclap{${1:f}}}\ 
endsnippet

priority 100
context "math()"
snippet -> "right arrow" i
\to
endsnippet

priority 100
context "math()"
snippet => "right double arrow" i
\Rightarrow
endsnippet

priority 100
context "math()"
snippet <= "left double arrow" i
\Leftarrow
endsnippet

priority 200
context "math()"
snippet <-> "left right arrow" i
\leftrightarrow
endsnippet

priority 200
context "math()"
snippet <=> "Left right double arrow" i
\Leftrightarrow
endsnippet

context "math()"
snippet ~ "tilde" Ai
\sim
endsnippet

context "math()"
snippet d= "coloneqq" i
\coloneqq
endsnippet

context "math()"
snippet dequiv "colon<=>" i
\,\colon\!\Leftrightarrow
endsnippet
#### Main ####

###########################################################

#### Environments ####
snippet ali "begin aligned" b
\begin{aligned}
	$0
\end{aligned}
endsnippet

snippet alia "begin alignedat" b
\begin{alignedat}{$1}
	$0
\end{alignedat}
endsnippet

snippet gat "begin gathered" b
\begin{gathered}
	$0
\end{gathered}
endsnippet

snippet 2c "begin dcases" b
\begin{dcases}
	$1 & \textrm{if }$2 \\\\
	$0 & \textrm{else}
\end{dcases}
endsnippet

snippet mat "begin bmatrix" b
\begin{bmatrix}
	$0
\end{bmatrix}
endsnippet
#### Environments ####

###########################################################

#### Convenience ####
snippet SQ "single quotes" it
$\textrm{\`}$$1$\textrm{'}$$0
endsnippet

snippet DQ "double quotes" it
$\textrm{\`\`}$$1$\textrm{''}$$0
endsnippet

snippet wlog "without loss of generality" i
w.l.o.g.
endsnippet
#### Convenience ####

###########################################################

#### Let ...
snippet TOP "Topological space" i
Let $\l\langle ${1:X},${2:\mc{T}}\r\rangle$ be a topological space. $0
endsnippet

priority 2000
snippet EQVREL "Relation" i
Let $${1:\\sim}$ be an equivalence relation on a set $${2:X}$. $0
endsnippet

priority 1000
snippet IND "Indexed family" i
Let $\l\\{${1:X}_${2:i}\r\\}_{$2\in${3: I}}$ be an indexed family of sets. $0
endsnippet

snippet RCINP "Real of complex inner product space" i
Let $K$ denote either $\\R$ or $\\C$ and let $V$ be an inner product space over $K$. $0
endsnippet
#### Let ...

###########################################################

#### Greek letters ####
priority 100
context "math()"
snippet A "alpha" i
\alpha
endsnippet

priority 100
context "math()"
snippet B "beta" i
\beta
endsnippet

priority 100
context "math()"
snippet G "gamma" i
\gamma
endsnippet

priority 200
context "math()"
snippet GG "Gamma" i
\Gamma
endsnippet

priority 100
context "math()"
snippet D "delta" i
\delta
endsnippet

priority 200
context "math()"
snippet DD "Delta" i
\Delta
endsnippet

priority 100
context "math()"
snippet E "epsilon" i
\epsilon
endsnippet

priority 100
context "math()"
snippet P "pi" i
\pi
endsnippet

priority 300
context "math()"
snippet PH "phi" i
\phi
endsnippet

priority 300
context "math()"
snippet PHH "Phi" i
\Phi
endsnippet

priority 300
context "math()"
snippet PS "psi" i
\psi
endsnippet

priority 200
context "math()"
snippet PP "Pi" i
\Pi
endsnippet

priority 100
context "math()"
snippet L "lambda" i
\lambda
endsnippet

priority 100
context "math()"
snippet T "tau" i
\tau
endsnippet

priority 200
context "math()"
snippet TH "theta" i
\theta
endsnippet

priority 100
context "math()"
snippet I "iota" i
\iota
endsnippet

priority 100
context "math()"
snippet N "eta" i
\eta
endsnippet

priority 100
context "math()"
snippet M "mu" i
\mu
endsnippet

priority 100
context "math()"
snippet K "kappa" i
\kappa
endsnippet

priority 100
context "math()"
snippet S "sigma" i
\sigma
endsnippet

priority 200
context "math()"
snippet SS "Sigma" i
\Sigma
endsnippet

priority 100
context "math()"
snippet R "rho" i
\rho
endsnippet

priority 100
context "math()"
snippet W "omega" i
\omega
endsnippet

priority 200
context "math()"
snippet WW "Omega" i
\Omega
endsnippet

priority 100
context "math()"
snippet X "xi" i
\xi
endsnippet

priority 200
context "math()"
snippet XX "Xi" i
\Xi
endsnippet
#### Greek letters ####

###########################################################

#### Spaces with text ####
snippet 4s "4 spaces" i
\ \ \ \ $0
endsnippet

snippet 8s "8 spaces" i
\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4t "4 spaces with text" i
\ \ \ \ \textrm{$1}\ \ \ \ $0
endsnippet

snippet 8t "8 spaces with text" i
\ \ \ \ \ \ \ \ \textrm{$1}\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4it "4 spaces with text (italic)" i
\ \ \ \ \textrm{\it{$1}}\ \ \ \ $0
endsnippet

snippet 8it "8 spaces with text (italic)" i
\ \ \ \ \ \ \ \ \textrm{\it{$1}}\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4a "4 spaces with and" i
\ \ \ \ \textrm{and}\ \ \ \ $0
endsnippet

snippet 8a "8 spaces with and" i
\ \ \ \ \ \ \ \ \textrm{and}\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4ia "4 spaces with and (italic)" i
\ \ \ \ \textrm{\it{and}}\ \ \ \ $0
endsnippet

snippet 8ia "8 spaces with and (italic)" i
\ \ \ \ \ \ \ \ \textrm{\it{and}}\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4f "4 spaces with for" i
\ \ \ \ \textrm{for}\ \ \ \ $0
endsnippet

snippet 8f "8 spaces with for" i
\ \ \ \ \ \ \ \ \textrm{for}\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4if "4 spaces with for (italic)" i
\ \ \ \ \textrm{\it{for}}\ \ \ \ $0
endsnippet

snippet 8if "8 spaces with for (italic)" i
\ \ \ \ \ \ \ \ \textrm{\it{for}}\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4o "4 spaces with or" i
\ \ \ \ \textrm{or}\ \ \ \ $0
endsnippet

snippet 8o "8 spaces with or" i
\ \ \ \ \ \ \ \ \textrm{or}\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4io "4 spaces with or (italic)" i
\ \ \ \ \textrm{\it{or}}\ \ \ \ $0
endsnippet

snippet 8io "8 spaces with or (italic)" i
\ \ \ \ \ \ \ \ \textrm{\it{or}}\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4m "4 spaces with mapping" i
\ \ \ \ \textrm{mapping}\ \ \ \ $0
endsnippet

snippet 8m "8 spaces with mapping" i
\ \ \ \ \ \ \ \ \textrm{mapping}\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4im "4 spaces with mapping (italic)" i
\ \ \ \ \textrm{\it{mapping}}\ \ \ \ $0
endsnippet

snippet 8im "8 spaces with mapping (italic)" i
\ \ \ \ \ \ \ \ \textrm{\it{mapping}}\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4e "4 spaces with equivalence" i
\ \ \ \ \Leftrightarrow\ \ \ \ $0
endsnippet

snippet 8e "8 spaces with equivalence" i
\ \ \ \ \ \ \ \ \Leftrightarrow\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4de "4 spaces with definitional equivalence" i
\ \ \ \ \,\colon\!\Leftrightarrow\ \ \ \ $0
endsnippet

snippet 8de "8 spaces with definitional equivalence" i
\ \ \ \ \ \ \ \ \,\colon\!\Leftrightarrow\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4i "4 spaces with implication" i
\ \ \ \ \Rightarrow\ \ \ \ $0
endsnippet

snippet 8i "8 spaces with implication" i
\ \ \ \ \ \ \ \ \Rightarrow\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4at "4 spaces with arrows and text" i
\ \ \ \ \xrightarrow{\textrm{$1}}\ \ \ \ $0
endsnippet

snippet 8at "8 spaces with arrows and text" i
\ \ \ \ \ \ \ \ \xrightarrow{\textrm{$1}}\ \ \ \ \ \ \ \ $0
endsnippet

snippet 4iat "4 spaces with arrows and text (italic)" i
\ \ \ \ \xrightarrow{\textrm{\it{$1}}}\ \ \ \ $0
endsnippet

snippet 8iat "8 spaces with arrows and text (italic)" i
\ \ \ \ \ \ \ \ \xrightarrow{\textrm{\it{$1}}}\ \ \ \ \ \ \ \ $0
endsnippet
#### Spaces with text ####
